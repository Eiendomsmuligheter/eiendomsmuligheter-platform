class ReportGenerator {
    constructor() {
        this.emojis = {
            success: '‚úÖ',
            warning: '‚ö†Ô∏è',
            error: '‚ùå',
            info: '‚ÑπÔ∏è',
            money: 'üí∞',
            house: 'üè†',
            tools: 'üõ†Ô∏è',
            document: 'üìÑ',
            light: 'üí°',
            fire: 'üî•',
            door: 'üö™',
            window: 'ü™ü',
            ruler: 'üìè',
            check: '‚úîÔ∏è',
            cross: '‚ùå',
            warning: '‚ö†Ô∏è',
            air: 'üí®',
            sound: 'üîä',
            temp: 'üå°Ô∏è',
            calendar: 'üìÖ',
            clock: 'üïí'
        };
    }

    generateUserFriendlyReport(analysis) {
        const sections = [
            this.generateSummarySection(analysis),
            this.generateRequirementsSection(analysis),
            this.generateCostsSection(analysis),
            this.generateTimelineSection(analysis)
        ];

        return sections.join('\n\n');
    }

    generateSummarySection(analysis) {
        return `
        ${this.emojis.house} BOLIGANALYSE - SAMMENDRAG
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

        ${this.emojis.info} Adresse: ${analysis.address}
        ${this.emojis.ruler} Totalt areal: ${analysis.totalArea}m¬≤
        ${this.emojis.money} Estimert utleiepotensial: ${analysis.estimatedRent} kr/mnd

        UTLEIEMULIGHETER:
        ${analysis.rentalUnits.map(unit => `
        ${this.emojis.door} Enhet ${unit.number}:
        ‚Ä¢ Areal: ${unit.area}m¬≤
        ‚Ä¢ Rom: ${unit.rooms}
        ‚Ä¢ Estimert leie: ${unit.rent} kr/mnd
        `).join('\n')}
        `;
    }

    generateRequirementsSection(analysis) {
        return `
        ${this.emojis.document} TEKNISKE KRAV
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

        ${this.emojis.fire} BRANNSIKKERHET
        ${this.getStatusIcon(analysis.requirements.fire.status)}
        ‚Ä¢ R√∏mningsveier: ${this.getStatusIcon(analysis.requirements.fire.escape)}
        ‚Ä¢ Brannskiller: ${this.getStatusIcon(analysis.requirements.fire.barriers)}
        ‚Ä¢ Brannvarsling: ${this.getStatusIcon(analysis.requirements.fire.alarms)}

        ${this.emojis.window} LYS OG VENTILASJON
        ${this.getStatusIcon(analysis.requirements.ventilation.status)}
        ‚Ä¢ Dagslys: ${this.getStatusIcon(analysis.requirements.ventilation.daylight)}
        ‚Ä¢ Luftkvalitet: ${this.getStatusIcon(analysis.requirements.ventilation.airQuality)}
        ‚Ä¢ Vindusst√∏rrelse: ${this.getStatusIcon(analysis.requirements.ventilation.windowSize)}

        ${this.emojis.ruler} ROMKRAV
        ${this.getStatusIcon(analysis.requirements.rooms.status)}
        ‚Ä¢ Takh√∏yde: ${this.getStatusIcon(analysis.requirements.rooms.height)}
        ‚Ä¢ Romareal: ${this.getStatusIcon(analysis.requirements.rooms.area)}
        ‚Ä¢ Adkomst: ${this.getStatusIcon(analysis.requirements.rooms.access)}

        ${this.emojis.sound} LYDKRAV
        ${this.getStatusIcon(analysis.requirements.sound.status)}
        ‚Ä¢ Vegger: ${this.getStatusIcon(analysis.requirements.sound.walls)}
        ‚Ä¢ Etasjeskiller: ${this.getStatusIcon(analysis.requirements.sound.floors)}
        `;
    }

    generateCostsSection(analysis) {
        return `
        ${this.emojis.money} KOSTNADSESTIMAT
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

        TOTALT: ${analysis.costs.total.toLocaleString()} kr

        Fordeling:
        ${Object.entries(analysis.costs.breakdown).map(([category, cost]) => 
            `${this.emojis.tools} ${category}: ${cost.toLocaleString()} kr`
        ).join('\n')}

        ${this.emojis.light} INNTEKTSPOTENSIAL
        ‚Ä¢ M√•nedlig: ${analysis.income.monthly.toLocaleString()} kr
        ‚Ä¢ √Örlig: ${analysis.income.yearly.toLocaleString()} kr
        ‚Ä¢ ROI: ${analysis.income.roi} m√•neder
        `;
    }

    generateTimelineSection(analysis) {
        return `
        ${this.emojis.calendar} TIDSLINJE
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

        ${analysis.timeline.map((step, index) => `
        ${this.emojis.clock} Steg ${index + 1}: ${step.title}
        ‚Ä¢ Varighet: ${step.duration}
        ‚Ä¢ Kostnad: ${step.cost.toLocaleString()} kr
        ‚Ä¢ Status: ${this.getStatusIcon(step.status)}
        `).join('\n')}
        `;
    }

    getStatusIcon(status) {
        switch(status.toLowerCase()) {
            case 'ok':
            case 'godkjent':
                return this.emojis.success;
            case 'warning':
            case 'advarsel':
                return this.emojis.warning;
            case 'error':
            case 'feil':
                return this.emojis.error;
            default:
                return this.emojis.info;
        }
    }

    generateFormPackage(analysis) {
        return {
            bruksendring: this.generateBruksendringForm(analysis),
            nabovarsel: this.generateNabovarselForm(analysis),
            tekniskDokumentasjon: this.generateTekniskDokumentasjon(analysis)
        };
    }

    generateBruksendringForm(analysis) {
        return {
            skjemaType: 'S√∏knad om bruksendring',
            skjemanummer: '5153',
            utfyltData: {
                eiendom: {
                    adresse: analysis.address,
                    gnr: analysis.propertyInfo.gnr,
                    bnr: analysis.propertyInfo.bnr,
                    kommune: analysis.propertyInfo.municipality
                },
                tiltakshaver: {
                    navn: analysis.owner.name,
                    kontaktinfo: analysis.owner.contact
                },
                tiltaket: {
                    beskrivelse: `Bruksendring av ${analysis.conversionDetails.fromType} til ${analysis.conversionDetails.toType}`,
                    areal: analysis.conversionDetails.area,
                    etasje: analysis.conversionDetails.floor
                }
            },
            vedlegg: this.generateAttachmentsList(analysis)
        };
    }

    generateNabovarselForm(analysis) {
        return {
            skjemaType: 'Nabovarsel',
            skjemanummer: '5154',
            naboer: analysis.neighbors.map(nabo => ({
                adresse: nabo.address,
                gnrBnr: nabo.propertyId,
                kontaktinfo: nabo.contact
            }))
        };
    }

    generateTekniskDokumentasjon(analysis) {
        return {
            brannkonsept: {
                r√∏mningsveier: analysis.technical.fireEscape,
                brannmotstand: analysis.technical.fireResistance
            },
            ventilasjon: {
                luftmengder: analysis.technical.airFlow,
                ventilasjonstype: analysis.technical.ventilationType
            },
            lyd: {
                lydm√•linger: analysis.technical.soundMeasurements,
                isolasjonsverdi: analysis.technical.soundInsulation
            }
        };
    }

    generateAttachmentsList(analysis) {
        return [
            {
                type: 'Plantegning',
                status: 'Vedlagt',
                format: 'PDF',
                nummer: '1'
            },
            {
                type: 'Brannkonsept',
                status: 'Vedlagt',
                format: 'PDF',
                nummer: '2'
            },
            {
                type: 'Ventilasjonsplan',
                status: 'Vedlagt',
                format: 'PDF',
                nummer: '3'
            }
        ];
    }
}